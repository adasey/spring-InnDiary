spring:
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: {google oauth2 클라이언트 id}
            clientSecret: {google oauth2 클라이언트 비밀키}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          kakao:
            clientId: '{카카오 client-id}'
            clientSecret: '{카카오 client-secret}'
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - account_email
            clientName: Kakao
          # Provider 설정
        provider:
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userNameAttribute: id

app:
  auth:
    tokenSecret: {토큰 값}
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:8080
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:8080/oauth2/redirect